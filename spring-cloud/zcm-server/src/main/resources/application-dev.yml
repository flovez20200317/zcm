spring:
  #Nacos服务注册
  cloud:
    nacos:
      discovery:
        #配置Nacos地址
        server-addr: 127.0.0.1:8848

  #MySQL
  datasource:
    url: jdbc:mysql://192.168.0.144:3306/zx_tools_test?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
    username: root
    password: Aa123456!
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    #下面为连接池的补充设置，应用到上面所有数据源中
    #初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    #配置获取连接等待超时的时间
    maxWait: 60000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    #在连接池返回连接给调用者前用来对连接进行验证的查询 SQL，要求为一条查询语句
    validationQuery: SELECT 1 FROM DUAL
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
    testWhileIdle: true
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
    poolPreparedStatements: false
    #maxPoolPreparedStatementPerConnectionSize: 20
    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    #通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
    #合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    #关闭监控功能
    filter.config.enabled: false
    web-stat-filter.enabled: false
    stat-view-servlet.enabled: false​
    #是否开启监控页面
    isOpenWeb: true
    #关闭session监控
    sessionStatEnable: false

  #Redis
  redis:
    database: 7
    host: 192.168.0.144
    port: 6379

  #Rabbitmq
  rabbitmq:
    host: 192.168.0.144
    port: 5672
    username: admin
    password: 123456
    publisherReturns: true
    listener:
      direct:
        retry:
          max-attempts: 3
          enabled: true
        acknowledge-mode: manual
        #限流（海量数据，同时只能过来一条）
        prefetch: 5
      simple:
        acknowledge-mode: manual
        #限流（海量数据，同时只能过来一条）
        concurrency: 15
        prefetch: 5
        max-concurrency: 15
      type: direct

# ElasticSearch Jest Client
elasticsearch:
  jestClient:
    uris: http://192.168.0.144:9200

#指定mybatis-plus映射文件的地址
mybatis-plus:
  mapper-locations: classpath:mapper/*Mapper.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl